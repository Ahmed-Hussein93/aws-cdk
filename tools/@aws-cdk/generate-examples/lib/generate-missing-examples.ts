import { TypeSystem } from 'jsii-reflect';

import { insertExample, replaceAssembly } from './assemblies';
import { generateClassAssignment } from './generate';

export async function generateMissingExamples(assemblyLocations: string[]) {
  for (const assemblyLocation of assemblyLocations) {
    const typesystem = new TypeSystem();
    const assembly = await typesystem.load(assemblyLocation);
    for (const classType of typesystem.classes) {
      const example = generateClassAssignment(classType);
      if (example) {
        // if (classType.fqn.startsWith('@aws-cdk/aws-s3')) {
        //   //eslint-disable-next-line no-console
        //   console.log('// This example was autogenerated. You will have to change the values.');
        //   //eslint-disable-next-line no-console
        //   console.log(example);
        // }
        insertExample(example, classType.spec);
      }
    }
    await replaceAssembly(assembly.spec, assemblyLocation);
  }
}

